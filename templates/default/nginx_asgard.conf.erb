# nginx asgard application vhost
#
# Generated by Chef for <%= node[:fqdn] %>
# Local modifications will be overwritten.
#
<% if @www_redirect -%>
server {
<% @listen_ports.each do |port| -%>
  listen            <%= port %>;
<% end -%>
    server_name     www.<%= @host_name %>;
    rewrite ^/(.*)  http://<%= @host_name %>/$1 permanent;
}

<% end -%>

<% if @ssl %>
server {
   listen         80;
   server_name    <%= @host_name %><% @host_aliases.each do |a| %><%= " #{a}" %> <% end %>;
   
   if ($request_method != GET ) {
     return 405;
   }
   
   rewrite  ^ https://$server_name$request_uri? permanent;
}
<% end %>

server {
<% @listen_ports.each do |port| -%>
  listen            <%= port %>;
<% end -%>
  server_name       <%= @host_name %><% @host_aliases.each do |a| %><%= " #{a}" %> <% end %>;
  
  <% if @ssl -%>
    ssl on;
    ssl_certificate <%= node[:asgard][:http_proxy][:ssl_certificate_file] %>;
    ssl_certificate_key <%= node[:asgard][:http_proxy][:ssl_certificate_key_file] %>;
  <% end -%>

  client_max_body_size <%= @max_upload_size %>;

  location / {
    proxy_pass http://127.0.0.1:<%= node[:asgard][:port] %>;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header Host $host;
    <% if @ssl -%>
    proxy_set_header X-Forwarded-Proto https;
    <% end -%>
  }
<% if @htpasswd -%>
  auth_basic            "Restricted";
  auth_basic_user_file  <%= File.join(node.nginx.dir, "htpasswd") %>;
<% end -%>

  error_log         <%= node[:nginx][:log_dir] %>/asgard-error.log;
  access_log        <%= node[:nginx][:log_dir] %>/asgard-access.log;
}
